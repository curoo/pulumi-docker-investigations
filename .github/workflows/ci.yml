name: ci
on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: subdir underneath /issues
        type: choice
        options:
          - issue_576
        required: true

jobs:
  try_to_deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/Python/3.9.16
          key: python-3.9.16

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.16

      # https://www.peterbe.com/plog/install-python-poetry-github-actions-faster
      - name: Load cached $HOME/.local
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: 1.3.2

      - name: Configure Fixed venv path for caching
        run: poetry config virtualenvs.in-project true
        working-directory: issues/${{ inputs.issue_number }}
        shell: bash

      # https://www.peterbe.com/plog/install-python-poetry-github-actions-faster
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: issues/${{ inputs.issue_number}}/.venv
          # https://github.community/t/nested-variable-substitution/140291
          key: ${{ format('venv-{0}-{1}-{2}', inputs.issue_number, hashFiles(format('{0}/poetry.lock', inputs.issue_number)), runner.os) }}

      - name: Install dependencies
        run: poetry install --all-extras
        working-directory: issues/${{ inputs.issue_number }}
        shell: bash
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Activate Virtual Environment
        # https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions#adding-a-system-path
        run: echo "${{ github.workspace }}/issues/${{ inputs.issue_number }}/.venv/bin" >> $GITHUB_PATH
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_SANDBOX }}:role/${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1800
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pulumi Up
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: ${{ secrets.PULUMI_ORG }}/sandbox
          work-dir: issues/${{ inputs.issue_number }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}